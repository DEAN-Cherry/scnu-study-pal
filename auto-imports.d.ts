/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const ElMessageBox: typeof import('element-plus/es')['ElMessageBox']
  const MonacoEditor: typeof import('./src/components/MonacoEditor.vue')['default']
  const axios: typeof import('axios')['default']
  const baseExam: typeof import('@/data/topic')['baseExam']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createUserConfig: typeof import('./src/composables/config')['createUserConfig']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const disposeEditor: typeof import('./src/utils/example-apps-common')['disposeEditor']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getFeedbackByIndex: typeof import('./src/composables/quiz')['getFeedbackByIndex']
  const getFeedbackByList: typeof import('./src/composables/quiz')['getFeedbackByList']
  const getFeedbackList: typeof import('./src/composables/quiz')['getFeedbackList']
  const getH: typeof import('./src/composables/quiz')['getH']
  const getQuestionByIndex: typeof import('./src/composables/quiz')['getQuestionByIndex']
  const getQuestionByList: typeof import('./src/composables/quiz')['getQuestionByList']
  const getQuestionList: typeof import('./src/composables/quiz')['getQuestionList']
  const getTextContent: typeof import('./src/utils/example-apps-common')['getTextContent']
  const getTopic: typeof import('./src/composables/quiz')['getTopic']
  const getWrapper: typeof import('./src/utils/example-apps-common')['getWrapper']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isDark: typeof import('./src/composables/dark')['isDark']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const mySelect: typeof import('./src/components/my-Select.vue')['default']
  const myTime: typeof import('./src/components/my-Time.vue')['default']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const selectTopic: typeof import('./src/components/select-Topic.vue')['default']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const startEditor: typeof import('./src/utils/example-apps-common')['startEditor']
  const swapEditors: typeof import('./src/utils/example-apps-common')['swapEditors']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const toggleDark: typeof import('./src/composables/dark')['toggleDark']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const updateModel: typeof import('./src/utils/example-apps-common')['updateModel']
  const use$: typeof import('./src/stores/test')['use$']
  const use$NAME: typeof import('./src/stores/timer')['use$NAME']
  const useAppStore: typeof import('./src/stores/app')['useAppStore']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCodeStore: typeof import('./src/stores/code')['useCodeStore']
  const useCounterStore: typeof import('./src/stores/counter')['useCounterStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useExamStore: typeof import('@/stores/quiz')['useExamStore']
  const useLink: typeof import('vue-router')['useLink']
  const useQuizStore: typeof import('./src/stores/quiz')['useQuizStore']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTimerStore: typeof import('./src/stores/timer')['useTimerStore']
  const useUserStore: typeof import('./src/stores/user')['useUserStore']
  const uuidv4: typeof import('uuid')['v4']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { RouteLocationRaw } from 'vue-router'
  import('vue-router')
}
